<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:integration="http://www.springframework.org/schema/integration"
	xmlns:file="http://www.springframework.org/schema/integration/file"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/integration
		http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/integration/file
		http://www.springframework.org/schema/integration/file/spring-integration-file.xsd">

	<context:component-scan base-package="net.arunoday.logstore" />

	<!-- ================================================================= -->
	<!-- ===== Spring Integration Setup for Polling Log Files ===== -->
	<!-- ================================================================= -->

	<!-- File Poller component -->
	<file:inbound-channel-adapter id="filesIn"
		directory="file:data" prevent-duplicates="true" auto-startup="true"
		channel="fileChannel" filename-pattern="*.log">
		<integration:poller fixed-rate="10"
			max-messages-per-poll="1" />
	</file:inbound-channel-adapter>

	<!-- Service activator to process the file -->
	<integration:service-activator id="logParser"
		input-channel="fileChannel" output-channel="moveFile" ref="logProcessor">
	</integration:service-activator>

	<!-- Moves the file to different folder to prevent from duplicate processing -->
	<file:outbound-channel-adapter id="moveFile"
		directory="file:data/processed" delete-source-files="true" />


	<!-- ===================================================== -->
	<!-- ===== PARSER SETUP ======= -->
	<!-- ===================================================== -->
	<bean id="log4jPatternMultilineLogParser"
		class="net.arunoday.logstore.parser.log4j.Log4jPatternMultilineLogParser">
		<property name="logFormat" value="TIMESTAMP LEVEL [THREAD] MESSAGE" />
		<property name="timestampFormat" value="yyyy-MM-dd HH:mm:ss,SSS" />
	</bean>

	<bean id="parserDescription" class="net.arunoday.logstore.parser.ParserDescription">
		<property name="displayName" value="Lo4j-pattern: %d{ISO8601} %-5p 
			[%t] %m%n" />
		<property name="description" value="LOG4J PARSING" />
		<property name="charset" value="UTF-8" />
	</bean>

	<!-- ===================================================== -->
	<!-- ===== MONGODB SETUP ===== -->
	<!-- ===================================================== -->
	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg name="mongo" ref="mongo" />
		<constructor-arg name="databaseName" value="test" />
	</bean>

	<!-- Factory bean that creates the Mongo instance -->
	<bean id="mongo" class="org.springframework.data.mongodb.core.MongoFactoryBean">
		<property name="host" value="127.0.0.1" />
		<property name="port" value="27017" />
	</bean>

	<!-- Use this post processor to translate any MongoExceptions thrown in 
		@Repository annotated classes -->
	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />


</beans>